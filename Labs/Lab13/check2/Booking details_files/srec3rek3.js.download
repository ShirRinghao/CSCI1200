



/* ControlTag Loader for Cathay Pacific 252f02ae-73a2-40e5-b0c4-d5161dfc796c */
(function(w, cs) {
  
  if (/Twitter for iPhone/.test(w.navigator.userAgent || '')) {
    return;
  }

  var debugging = /kxdebug/.test(w.location);
  var log = function() {
    
    debugging && w.console && w.console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = w.document.createElement('script');
    node.async = true;  
    node.src = url;

    
    node.onload = node.onreadystatechange = function () {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  
        callback();
      }
    };

    
    var sibling = w.document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  var config = {"app":{"name":"krux-scala-config-webservice","version":"3.41.2","schema_version":3},"confid":"srec3rek3","context_terms":[],"publisher":{"name":"Cathay Pacific","active":true,"uuid":"252f02ae-73a2-40e5-b0c4-d5161dfc796c","version_bucket":"stable","id":3310},"params":{"first_party_dmp_managed":false,"link_header_bidder":false,"site_level_supertag_config":"site","recommend":false,"first_party_cookie_enhancements":false,"control_tag_pixel_throttle":100,"fingerprint":false,"optout_button_optout_text":"Browser Opt Out","user_data_timing":"load","consent_active":true,"use_central_usermatch":true,"store_realtime_segments":false,"tag_source":false,"link_hb_start_event":"ready","optout_button_optin_text":"Browser Opt In","first_party_uid":false,"link_hb_timeout":2000,"link_hb_adserver_subordinate":true,"optimize_realtime_segments":false,"link_hb_adserver":"dfp","target_fingerprint":false,"context_terms":false,"optout_button_id":"kx-optout-button","dfp_premium":true,"control_tag_namespace":"cathaypacific"},"prioritized_segments":[],"realtime_segments":[{"id":"s9r9rdx70","test":["and",["and",["or",["contains","$page_attr_page_stream",["rev"]]],["and",["contains","$page_attr_search_flight_destination_airport",["kix"]]]]]},{"id":"tgeexwj12","test":["and",["and",["or",["intersects","$user_attr_mcaudience",["extra_legroom_onsite_banner","hotel_onsite_banner","prepaid_baggage_onsite_banner"]]]]]}],"services":{"userdata":"//cdn.krxd.net/userdata/get","contentConnector":"https://connector.krxd.net/content_connector","stats":"//apiservices.krxd.net/stats","optout":"//cdn.krxd.net/userdata/optout/status","event":"//beacon.krxd.net/event.gif","set_optout":"https://consumer.krxd.net/consumer/optout","data":"//beacon.krxd.net/data.gif","link_hb_stats":"//beacon.krxd.net/link_bidder_stats.gif","userData":"//cdn.krxd.net/userdata/get","link_hb_mas":"https://link.krxd.net/hb","config":"//cdn.krxd.net/controltag/{{ confid }}.js","social":"//beacon.krxd.net/social.gif","addSegment":"//cdn.krxd.net/userdata/add","pixel":"//beacon.krxd.net/pixel.gif","um":"https://usermatch.krxd.net/um/v2","controltag":"//cdn.krxd.net/ctjs/controltag.js.{hash}","loopback":"https://consumer.krxd.net/consumer/tmp_cookie","remove":"https://consumer.krxd.net/consumer/remove/252f02ae-73a2-40e5-b0c4-d5161dfc796c","click":"https://apiservices.krxd.net/click_tracker/track","stats_export":"//beacon.krxd.net/controltag_stats.gif","userdataApi":"//cdn.krxd.net/userdata/v1/segments/get","cookie":"//beacon.krxd.net/cookie2json","proxy":"//cdn.krxd.net/partnerjs/xdi","consent_get":"https://consumer.krxd.net/consent/get/252f02ae-73a2-40e5-b0c4-d5161dfc796c","consent_set":"https://consumer.krxd.net/consent/set/252f02ae-73a2-40e5-b0c4-d5161dfc796c","is_optout":"https://beacon.krxd.net/optout_check","impression":"//beacon.krxd.net/ad_impression.gif","transaction":"//beacon.krxd.net/transaction.gif","log":"//jslog.krxd.net/jslog.gif","portability":"https://consumer.krxd.net/consumer/portability/252f02ae-73a2-40e5-b0c4-d5161dfc796c","set_optin":"https://consumer.krxd.net/consumer/optin","usermatch":"//beacon.krxd.net/usermatch.gif"},"experiments":[],"site":{"name":"Cathay Pacific","cap":255,"id":1661914,"organization_id":3310,"uid":"srec3rek3"},"tags":[{"id":36116,"name":"DTC - UTM Attributes","content":"<script>\n(function(){\n\n\tvar params = Krux('require:util').urlParams();\n\t\n\tKrux ('set', { \n\t'page_attr_utm_source': params.utm_source,\n\t'page_attr_utm_medium': params.utm_medium,\n\t'page_attr_utm_campaign': params.utm_campaign,\n\t'page_attr_utm_content': params.utm_content,\n\t'page_attr_utm_term': params.utm_term \n\t});\n\t\n})();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":36405,"name":"DTC - Data Sender (All)","content":"<script>\n(function() {\n    var _kx, config, custDelimit, libUtil, omitKeys, pixelFired, prefix,\n        trackAfterPixel, userKeys;\n    libUtil = Krux('require:util.library-tag');\n    userKeys = libUtil.removeFalsyStrings('email_sha256,member_no,subid,membership_no');\n    omitKeys = libUtil.removeFalsyStrings('false');\n    custDelimit = libUtil.removeFalsyStrings('false');\n    trackAfterPixel = 'true' === 'true';\n    prefix = libUtil.resolvePrefix('none', 'undefined',\n        'undefined');\n    config = {\n        userKeys: userKeys,\n        omitKeys: omitKeys.concat(libUtil.EXCLUDE_KEYS_CONFIG),\n        customDelimited: custDelimit,\n        caseSensitive: 'false' === 'true',\n        useFullPath: 'true' === 'true',\n        useLastValue: 'false' === 'true',\n        optimizeNames: 'true' === 'true',\n        convertAttrNames: []\n    };\n    if (prefix) {\n        config.convertAttrNames.push({\n            pattern: /((?:page|user)_attr_)/,\n            replacement: '$1' + prefix\n        });\n    }\n    _kx = Krux;\n    pixelFired = false;\n    Krux('onOnce:pixel', function() {\n        return pixelFired = true;\n    });\n    Krux('simpleRoute:track:all', function(dataObj) {\n        var _, attr;\n        _ = _kx('require:underscore');\n        if (!_.isObject(dataObj)) {\n            return;\n        }\n        if (pixelFired) {\n            if (!trackAfterPixel) {\n                return;\n            }\n        }\n        attr = _kx('ingestDataLayer', dataObj, config);\n        _kx('fire:track:all', dataObj);\n        if (pixelFired) {\n            _kx('require:pixel').send('');\n        }\n    });\n}).call();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":36749,"name":"DTC - Data Sender (Email)","content":"<script>\n(function() {\n    var _kx;\n    _kx = Krux;\n    Krux('simpleRoute:track:email', function(id) {\n        var algorithm, idType, obj, toSet;\n        if (typeof id !== 'string') {\n            return;\n        }\n        idType = 'email';\n        algorithm = 'sha256';\n        if (/^.+@./.test(id)) {\n            algorithm = 'sha256';\n            id = _kx('scrape.email_sha256', id);\n        }\n        toSet = (\n            obj = {},\n            obj[\"user_attr_\" + idType + \"_\" + algorithm] = id,\n            obj\n        );\n        return _kx('set', toSet);\n    });\n}).call();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":37341,"name":"DTC - Data Sender (Extension)","content":"<script>\n(function() {\n    var _kx = Krux;\n    Krux('on:track:all', function(obj){\n        if (obj.page_name) {\n            _kx('set', 'page_attr_page_name', obj.page_name);\n        }\n    });\n}).call();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":35545,"name":"Segments to Partner (Optimizely)","content":"<script>(function(){var a=Krux(\"require:store\");a.set(\"segs_partner\",a.get(\"segs\")),Krux(\"onOnce:user_data_response\",function(){a.set(\"segs_partner\",a.get(\"segs\"))})}).call();</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":36086,"name":"DTC - UTM Media Tracker (FACEBOOK)","content":"<script>\n(function() {\n    var clickURL = Krux('get', 'url_click'),\n        _ = Krux('require:underscore'),\n        libUtil = Krux('require:util.library-tag'),\n        pixelParam, store, sent,\n        confid, campaignid, siteid;\n\n    // Function to retrieve capping info from sessionStorage\n    function get(key) {\n        try {\n            return JSON.parse(sessionStorage.getItem(key) || '[]');\n        } catch (e) {\n            return [];\n        }\n    }\n\n    // Function to add capping info to sessionStorage\n    function set(key, value) {\n        try {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        } catch (e) {}\n    }\n\n    // Function to check if tag is valid by comparing aginst capping info\n    function configValidate(config) {\n        var allowedSource = libUtil.removeFalsyStrings('FACEBOOK'),\n            i = 0;\n        for (; i < store.length; i++) {\n            if (_.isEqual(store[i], config)) return false;\n        }\n        // Cater for client not using allowedSource\n        if (!allowedSource.length) allowedSource.push(config.kxsiteid);\n        // Invalid if source is not in the allowed list\n        if (_.indexOf(allowedSource, config.kxsiteid) < 0) return false;\n        return true;\n    }\n\n    // Function to collect and normalize values\n    function getParameter(method, path) {\n        var value;\n\n        if (!(method && path)) return;\n\n        switch (method) {\n            case 'none':\n                break;\n            case 'text':\n                value = path;\n                break;\n            case 'get':\n                value = Krux('get', path);\n                break;\n            default:\n                value = Krux('scrape.' + method, path);\n        }\n\n        if (value && !_.isArray(value)) return value\n            .replace(/[^a-zA-Z0-9_-]+/g, '_')\n            .replace(/_+/g, '_')\n            .replace(/^_/, '')\n            .replace(/_$/, '');\n        // Use null if no result as it is included in JSON.stringify\n        return null;\n    }\n\n    // Scrape Media Attributes\n    confid = getParameter('text', 'szmnw5g0w');\n    campaignid = getParameter('url_param', 'utm_campaign');\n    siteid = getParameter('url_param', 'utm_source');\n\n    // Ensure minimum requirements are met\n    if (confid && campaignid && siteid) {\n        // Use omit to remove undefined values to match validation object\n        pixelParam = _.omit({\n            'kxconfid': confid,\n            'kxcampaignid': campaignid,\n            'kxsiteid': siteid,\n            'kxadvertiserid': getParameter('none', 'undefined'),\n            'kxplacementid': getParameter('url_param', 'utm_medium'),\n            'kxadid': getParameter('url_param', 'utm_content'),\n            'kxcreativeid': getParameter('none', 'undefined'),\n            'kxbrand': getParameter('url_param', 'kxbrand'),\n            'clk': 'https://beacon.krxd.net/click_landing.gif'\n        }, function(value) {\n            return !value\n        });\n\n        // Retrieve capping info\n        store = get('k_utm_store');\n\n        if (configValidate(pixelParam)) {\n            // Update capping info to prevent re-fires\n            store.push(pixelParam);\n            set('k_utm_store', store);\n            sent = Krux('require:http').pixel({\n                url: clickURL,\n                data: pixelParam\n            });\n        }\n    }\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":36133,"name":"DTC- UTM Media Tracker (Search)","content":"<script>\n(function() {\n    var clickURL = Krux('get', 'url_click'),\n        _ = Krux('require:underscore'),\n        libUtil = Krux('require:util.library-tag'),\n        pixelParam, store, sent,\n        confid, campaignid, siteid;\n\n    // Function to retrieve capping info from sessionStorage\n    function get(key) {\n        try {\n            return JSON.parse(sessionStorage.getItem(key) || '[]');\n        } catch (e) {\n            return [];\n        }\n    }\n\n    // Function to add capping info to sessionStorage\n    function set(key, value) {\n        try {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        } catch (e) {}\n    }\n\n    // Function to check if tag is valid by comparing aginst capping info\n    function configValidate(config) {\n        var allowedSource = libUtil.removeFalsyStrings('GOOGLE,MICROSOFT'),\n            i = 0;\n        for (; i < store.length; i++) {\n            if (_.isEqual(store[i], config)) return false;\n        }\n        // Cater for client not using allowedSource\n        if (!allowedSource.length) allowedSource.push(config.kxsiteid);\n        // Invalid if source is not in the allowed list\n        if (_.indexOf(allowedSource, config.kxsiteid) < 0) return false;\n        return true;\n    }\n\n    // Function to collect and normalize values\n    function getParameter(method, path) {\n        var value;\n\n        if (!(method && path)) return;\n\n        switch (method) {\n            case 'none':\n                break;\n            case 'text':\n                value = path;\n                break;\n            case 'get':\n                value = Krux('get', path);\n                break;\n            default:\n                value = Krux('scrape.' + method, path);\n        }\n\n        if (value && !_.isArray(value)) return value\n            .replace(/[^a-zA-Z0-9_-]+/g, '_')\n            .replace(/_+/g, '_')\n            .replace(/^_/, '')\n            .replace(/_$/, '');\n        // Use null if no result as it is included in JSON.stringify\n        return null;\n    }\n\n    // Scrape Media Attributes\n    confid = getParameter('text', 'szmpeqkey');\n    campaignid = getParameter('url_param', 'utm_campaign');\n    siteid = getParameter('url_param', 'utm_source');\n\n    // Ensure minimum requirements are met\n    if (confid && campaignid && siteid) {\n        // Use omit to remove undefined values to match validation object\n        pixelParam = _.omit({\n            'kxconfid': confid,\n            'kxcampaignid': campaignid,\n            'kxsiteid': siteid,\n            'kxadvertiserid': getParameter('none', 'undefined'),\n            'kxplacementid': getParameter('none', 'undefined'),\n            'kxadid': getParameter('none', 'undefined'),\n            'kxcreativeid': getParameter('none', 'undefined'),\n            'kxbrand': getParameter('none', 'undefined'),\n            'clk': 'https://beacon.krxd.net/click_landing.gif'\n        }, function(value) {\n            return !value\n        });\n\n        // Retrieve capping info\n        store = get('k_utm_store');\n\n        if (configValidate(pixelParam)) {\n            // Update capping info to prevent re-fires\n            store.push(pixelParam);\n            set('k_utm_store', store);\n            sent = Krux('require:http').pixel({\n                url: clickURL,\n                data: pixelParam\n            });\n        }\n    }\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":36196,"name":"Facebook ViewContent","content":"<script>\n// This library tag assumes fbq is available on the page.\n(function() {\n    if (window.fbq) {\n        var e = Krux;\n        var i = function() {\n            var n = e('get', atob('dXNlcl9zZWdtZW50cw==')) || [];\n            var i = {};\n            's05pcs5no:test'.split(',').map(function(n) {\n                var t = n.split(':');\n                if (t.length == 2) i[t[0]] = t[1];\n            });\n            for (var t in i) {\n                if (n.indexOf(t) !== -1 && i[t]) {\n                    fbq('track', 'ViewContent', {\n                        content_name: i[t]\n                    });\n                }\n            }\n        };\n        if (e('get', 'config').params.consent_active) {\n            e('consent:get', function(n, t) {\n                if (t.settings.tg) {\n                    i();\n                }\n            });\n        } else {\n            i();\n        }\n    }\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":36308,"name":"BING RLSA_s05pcs5no","content":"<script>(function(w,d,t,r,u){var f,n,i;w[u]=w[u]||[],f=function(){var o={ti:\"20045841\"};o.q=w[u],w[u]=new UET(o),w[u].push(\"pageLoad\")},n=d.createElement(t),n.src=r,n.async=1,n.onload=n.onreadystatechange=function(){var s=this.readyState;s&&s!==\"loaded\"&&s!==\"complete\"||(f(),n.onload=n.onreadystatechange=null)},i=d.getElementsByTagName(t)[0],i.parentNode.insertBefore(n,i)})(window,document,\"script\",\"//bat.bing.com/bat.js\",\"uetq\");</script>\n\n<script>\nwindow.uetq = window.uetq || []; \nwindow.uetq.push\n({ 'ec':'McCann', 'ea':'McCann', 'el':'McCann', 'ev':'0' }); \n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":36351,"name":"Google_RLSA","content":"<!-- Google Code for Krux -->\n<!-- Remarketing tags may not be associated with personally identifiable information or placed on pages related to sensitive categories. For instructions on adding this tag and more information on the above requirements, read the setup guide: google.com/ads/remarketingsetup -->\n<script type=\"text/javascript\">\n\tvar krux_segments = Krux('get','user_segments') || []; //String\n\tvar tSegs = 's05pcs5no'.toLowerCase().split(',');\n\tvar segsToSend = [];\n\n\tkrux_segments.sort();\n\ttSegs.sort();\n\n\tif(tSegs[0].toLowerCase() == 'all'){\n\t\tsegsToSend = krux_segments;\n\t}else{\n\t\ttSegs.map(function(seg) {\n\t         if(krux_segments.indexOf(seg) !== -1) {\n\t            segsToSend.push(seg);\n\t         }\n\t     });\n\t}\n\n\tsegsToSend = segsToSend.join(',');\n\n\twindow.google_tag_params = window.google_tag_params || {};\n\twindow.google_tag_params.krux_segments = segsToSend;\n\n</script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar google_conversion_id = 1058753849;\nvar google_conversion_label = \"evIlCJnanoUBELma7fgD\";\nvar google_custom_params = window.google_tag_params;\nvar google_remarketing_only = true;\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":36826,"name":"UC10 - WinterEU FB Audience","content":"<!-- Facebook Pixel Code --> \n<script> \n  !function(f,b,e,v,n,t,s) \n  {if(f.fbq)return;n=f.fbq=function(){n.callMethod? \n  n.callMethod.apply(n,arguments):n.queue.push(arguments)}; \n  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0'; \n  n.queue=[];t=b.createElement(e);t.async=!0; \n  t.src=v;s=b.getElementsByTagName(e)[0]; \n  s.parentNode.insertBefore(t,s)}(window, document,'script', \n  'https://connect.facebook.net/en_US/fbevents.js'); \n  fbq('init', '1471712519712382'); \n  fbq('track', 'WinterEU-Phase2'); \n</script> \n<noscript><img height=\"1\" width=\"1\" style=\"display:none\" \n  src=\"https://www.facebook.com/tr?id=1471712519712382&ev=PageView&noscript=1\" \n/></noscript> \n<!-- End Facebook Pixel Code -->","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":["and",["and",["or",["intersects","$page_attr_flight_destination_airport",["ams"]],["intersects","$page_attr_flight_destination_airport",["bcn"]],["intersects","$page_attr_flight_destination_airport",["bru"]],["intersects","$page_attr_flight_destination_airport",["cdg"]],["intersects","$page_attr_flight_destination_airport",["dub"]],["intersects","$page_attr_flight_destination_airport",["fco"]],["intersects","$page_attr_flight_destination_airport",["fra"]],["intersects","$page_attr_flight_destination_airport",["lgw"]],["intersects","$page_attr_flight_destination_airport",["lhr"]],["intersects","$page_attr_flight_destination_airport",["mad"]],["intersects","$page_attr_flight_destination_airport",["man"]],["intersects","$page_attr_flight_destination_airport",["mxp"]],["intersects","$page_attr_flight_destination_airport",["zrh"]]]]],"collects_data":true},{"id":36115,"name":"DTC - Standard","content":"<script>\n(function() {\n    /* Standard but configurable DTC */\n    var comDomain, domain, level, libUtil, pathLevel, prefix, toSet;\n    libUtil = Krux('require:util.library-tag');\n    toSet = {};\n    level = 1;\n    while (level <= Number('3')) {\n        pathLevel = Krux('scrape.url_path', level);\n        if (pathLevel) {\n            if ('false' === 'true') {\n                pathLevel = (\"\" + pathLevel).replace(\n                    /\\.(?:html?|php[0-9]?|aspx?|cfg|py)$/i, '');\n            }\n            toSet[\"page_attr_url_path_\" + level] = pathLevel;\n        }\n        level++;\n    }\n    toSet['page_attr_meta_keywords'] = Krux('scrape.meta_name', 'keywords');\n    prefix = libUtil.resolvePrefix('none', 'undefined',\n        'undefined');\n    toSet = Krux('prefix:attr', toSet, prefix);\n    domain = Krux('get', 'domain');\n    comDomain = domain.match(/\\.([^\\.]+\\.com)$/);\n    if (comDomain) {\n        domain = comDomain[1];\n    }\n    toSet['page_attr_domain'] = domain;\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onready","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true}],"usermatch_tags":[{"id":6,"name":"Google User Match","content":"<script>\n(function() {\n  if (Krux('get', 'user') != null) {\n      new Image().src = 'https://usermatch.krxd.net/um/v2?partner=google';\n  }\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":23,"name":"BlueKai S2S","content":"<script>\r\n    (function() {\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var bk_prefix = location.protocol == 'https:' ? \"stags\" : \"tags\";\r\n            var kurl_params = encodeURIComponent(\"_kuid=\" + kuid + \"&partner=bluekai&bk_uuid=$_BK_UUID\");\r\n            var kurl = prefix + \"//beacon.krxd.net/usermatch.gif?\" + kurl_params;\r\n            var bk_params = 'id=' + kuid;\r\n            var bk_url = '//' + bk_prefix + '.bluekai.com/site/26357?' + bk_params + '&redir=' + kurl;\r\n            var i = new Image();\r\n            i.src = bk_url;\r\n        }\r\n    })();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":34,"name":"Comscore Data Tag","content":"<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  var cbust = Math.round(new Date().getTime() / 1000);\r\n  var prefix = location.protocol == 'https:' ? \"https:\" :\"http:\";\r\n  var url = prefix == 'https:' ? '//sb.scorecardresearch.com/p' : '//b.scorecardresearch.com/p';\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: url,\r\n      data: {\r\n          c1: '9',\r\n          c2: '8188709',\r\n          cs_xi: kuid,\r\n          rn: cbust\r\n      }});\r\n  }\r\n  })();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":51,"name":"Eyeota User Match","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n\r\n        if (kuid) {\r\n           var url = prefix + '//ps.eyeota.net/match?bid=i0r4o4v&uid=' + kuid;\r\n           (new Image()).src = url;\r\n        }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":77,"name":"MediaMath User Match","content":"<script>\r\n\r\n(function(){\r\n\tvar prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n\tvar url = prefix + '//pixel.mathtag.com/sync/img?redir=' + prefix + '%2F%2Fbeacon.krxd.net%2Fusermatch.gif%3Fpartner%3Dmediamath%26mmuuid%3D%5BMM_UUID%5D';\r\n\t(new Image()).src = url;\r\n})();\r\n\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":9,"name":"RocketFuel User Match","content":"<script>\r\n(function() {\r\n    var i = new Image();\r\n    i.src = '//p.rfihub.com/cm?in=1&pub=6919';\r\n})();\r\n\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":17,"name":"Twitter User Match","content":"<script>\n(function(){\n  var kuid = Krux('get', 'user');\n  if (kuid) {\n      var url =\n\"https://analytics.twitter.com/i/adsct?p_user_id=\" + kuid +\n\"&p_id=10623\";\n      var i = new Image();\n      i.src = url;     \n  }\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true}],"link":{"adslots":{},"bidders":{}}};
  
  for (var i = 0, tags = config.tags, len = tags.length, tag; (tag = tags[i]); ++i) {
    if (String(tag.id) in cs) {
      tag.content = cs[tag.id];
    }
  }

  
  var esiGeo = String(function(){/*
   <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = w.JSON.parse(esiGeo);
    } catch (__) {
      
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }



  var proxy = (window.Krux && window.Krux.q && window.Krux.q[0] && window.Krux.q[0][0] === 'proxy');

  if (!proxy || true) {
    

  load('//cdn.krxd.net/ctjs/controltag.js.9791902f4f5b02b08a4a694e7fe1b073', function() {
    log('Loaded stable controltag resource');
    Krux('config', config);
  });

  }

})(window, (function() {
  var obj = {};
  
  return obj;
})());
